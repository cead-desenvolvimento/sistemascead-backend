# Generated by Django 5.2 on 2025-04-22 13:27

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AcCurso",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("nome", models.CharField(max_length=127)),
                ("email", models.CharField(blank=True, max_length=127, null=True)),
                ("ativo", models.BooleanField()),
                (
                    "descricao",
                    models.TextField(blank=True, null=True, verbose_name="Descrição"),
                ),
                (
                    "perfil_egresso",
                    models.TextField(
                        blank=True, null=True, verbose_name="Perfil do egresso"
                    ),
                ),
                (
                    "ddd",
                    models.CharField(
                        blank=True, max_length=2, null=True, verbose_name="DDD"
                    ),
                ),
                ("telefone", models.CharField(blank=True, max_length=9, null=True)),
            ],
            options={
                "verbose_name": "(Acadêmico) Curso",
                "verbose_name_plural": "(Acadêmico) Cursos",
                "db_table": "ac_curso",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AcCursoOferta",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "numero",
                    models.SmallIntegerField(
                        blank=True,
                        db_comment="O numero da oferta, para controle do financeiro",
                        null=True,
                        verbose_name="Número da oferta",
                    ),
                ),
                (
                    "inicio_sisuab",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data de início no SISUAB"
                    ),
                ),
                ("inicio", models.DateField(blank=True, null=True)),
                ("fim", models.DateField(blank=True, null=True)),
                ("vagas", models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "(Acadêmico) Curso - oferta",
                "verbose_name_plural": "(Acadêmico) Cursos - ofertas",
                "db_table": "ac_curso_oferta",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AcCursoOfertaPolo",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("vagas", models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "(Acadêmico) Curso - oferta - polo",
                "verbose_name_plural": "(Acadêmico) Cursos - ofertas - polos",
                "db_table": "ac_curso_oferta_polo",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AcCursoTipo",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("nome", models.CharField(max_length=31)),
            ],
            options={
                "verbose_name": "(Acadêmico) Tipo de curso",
                "verbose_name_plural": "(Acadêmico) Tipos de curso",
                "db_table": "ac_curso_tipo",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AcDisciplina",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "periodo",
                    models.SmallIntegerField(
                        blank=True, null=True, verbose_name="Período"
                    ),
                ),
                ("nome", models.CharField(max_length=127)),
                (
                    "codigo",
                    models.CharField(
                        blank=True, max_length=15, null=True, verbose_name="Código"
                    ),
                ),
                (
                    "carga_horaria",
                    models.SmallIntegerField(
                        blank=True, null=True, verbose_name="Carga horária"
                    ),
                ),
                ("categoria", models.CharField(blank=True, max_length=63, null=True)),
                ("tipo", models.CharField(blank=True, max_length=31, null=True)),
            ],
            options={
                "verbose_name": "(Acadêmico) Disciplina",
                "verbose_name_plural": "(Acadêmico) Disciplinas",
                "db_table": "ac_disciplina",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AcMantenedor",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("nome", models.CharField(max_length=63)),
                (
                    "responsavel",
                    models.CharField(max_length=63, verbose_name="Responsável"),
                ),
                ("cnpj", models.CharField(max_length=14, verbose_name="CNPJ")),
                ("email", models.CharField(max_length=63)),
                ("tipo", models.CharField(max_length=10)),
                (
                    "ddd",
                    models.CharField(
                        blank=True, max_length=2, null=True, verbose_name="DDD"
                    ),
                ),
                ("telefone", models.CharField(blank=True, max_length=9, null=True)),
                ("logradouro", models.CharField(blank=True, max_length=255, null=True)),
                ("numero", models.CharField(blank=True, max_length=10, null=True)),
                ("complemento", models.CharField(blank=True, max_length=63, null=True)),
                ("bairro", models.CharField(blank=True, max_length=63, null=True)),
                ("cep", models.CharField(blank=True, max_length=8, null=True)),
            ],
            options={
                "verbose_name": "(Acadêmico) Mantenedor",
                "verbose_name_plural": "(Acadêmico) Mantenedores",
                "db_table": "ac_mantenedor",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AcPolo",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("nome", models.CharField(max_length=63)),
                ("email", models.CharField(max_length=63)),
                ("ativo", models.BooleanField()),
                ("latitude", models.FloatField()),
                ("longitude", models.FloatField()),
                (
                    "apresentacao",
                    models.TextField(
                        blank=True, null=True, verbose_name="Apresentação"
                    ),
                ),
                (
                    "ddd",
                    models.CharField(
                        blank=True, max_length=2, null=True, verbose_name="DDD"
                    ),
                ),
                ("telefone", models.CharField(blank=True, max_length=9, null=True)),
                ("logradouro", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "numero",
                    models.CharField(
                        blank=True, max_length=10, null=True, verbose_name="Número"
                    ),
                ),
                ("complemento", models.CharField(blank=True, max_length=63, null=True)),
                ("bairro", models.CharField(blank=True, max_length=127, null=True)),
                (
                    "cep",
                    models.CharField(
                        blank=True, max_length=8, null=True, verbose_name="CEP"
                    ),
                ),
            ],
            options={
                "verbose_name": "(Acadêmico) Polo",
                "verbose_name_plural": "(Acadêmico) Polos",
                "db_table": "ac_polo",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AcPoloHorarioFuncionamento",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "dia_semana",
                    models.CharField(db_comment="isodow() do pgsql", max_length=1),
                ),
                ("hora_inicio", models.TimeField()),
                ("hora_fim", models.TimeField()),
            ],
            options={
                "verbose_name": "(Acadêmico) Horário de funcionamento do polo",
                "verbose_name_plural": "(Acadêmico) Horários de funcionamento dos polos",
                "db_table": "ac_polo_horario_funcionamento",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, unique=True)),
            ],
            options={
                "db_table": "auth_group",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthGroupPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_group_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("codename", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "auth_permission",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("is_superuser", models.BooleanField()),
                ("username", models.CharField(max_length=150, unique=True)),
                ("first_name", models.CharField(max_length=150)),
                ("last_name", models.CharField(max_length=150)),
                ("email", models.CharField(max_length=254)),
                ("is_staff", models.BooleanField()),
                ("is_active", models.BooleanField()),
                ("date_joined", models.DateTimeField()),
            ],
            options={
                "db_table": "auth_user",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUserGroups",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_user_groups",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUserUserPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_user_user_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CmFormacao",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("nome", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "(Comum) Formação",
                "verbose_name_plural": "(Comum) Formações",
                "db_table": "cm_formacao",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CmMunicipio",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "municipio",
                    models.CharField(max_length=31, verbose_name="Município"),
                ),
            ],
            options={
                "verbose_name": "(Comum) Município",
                "verbose_name_plural": "(Comum) Municípios",
                "db_table": "cm_municipio",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CmPessoa",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("nome", models.CharField(max_length=255)),
                ("cpf", models.CharField(max_length=11, unique=True)),
                ("email", models.CharField(max_length=127)),
            ],
            options={
                "verbose_name": "(Comum) Pessoa",
                "verbose_name_plural": "(Comum) Pessoas",
                "db_table": "cm_pessoa",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CmPessoaBanco",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("codigo_banco", models.SmallIntegerField()),
                ("agencia", models.SmallIntegerField()),
                ("conta", models.BigIntegerField()),
                ("digito_verificador_conta", models.SmallIntegerField()),
            ],
            options={
                "verbose_name": "(Comum) Pessoa - banco",
                "verbose_name_plural": "(Comum) Pessoas - bancos",
                "db_table": "cm_pessoa_banco",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CmPessoaEndereco",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("cep", models.CharField(max_length=8)),
                ("logradouro", models.CharField(max_length=255)),
                ("numero", models.CharField(blank=True, max_length=10, null=True)),
                ("complemento", models.CharField(blank=True, max_length=63, null=True)),
                ("bairro", models.CharField(max_length=127)),
            ],
            options={
                "verbose_name": "(Comum) Pessoa - endereço",
                "verbose_name_plural": "(Comum) Pessoas - endereços",
                "db_table": "cm_pessoa_endereco",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CmPessoaTelefone",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("ddd", models.CharField(max_length=2)),
                ("numero", models.CharField(max_length=9)),
            ],
            options={
                "verbose_name": "(Comum) Pessoa - telefone",
                "verbose_name_plural": "(Comum) Pessoas - telefones",
                "db_table": "cm_pessoa_telefone",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CmTitulacao",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("nome", models.CharField(max_length=63)),
            ],
            options={
                "verbose_name": "(Comum) Titulação",
                "verbose_name_plural": "(Comum) Titulações",
                "db_table": "cm_titulacao",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CmUf",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("sigla", models.CharField(max_length=2)),
                ("uf", models.CharField(max_length=20)),
            ],
            options={
                "verbose_name": "(Comum) Unidade da Federação",
                "verbose_name_plural": "(Comum) Unidades da Federação",
                "db_table": "cm_uf",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoAdminLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action_time", models.DateTimeField()),
                ("object_id", models.TextField(blank=True, null=True)),
                ("object_repr", models.CharField(max_length=200)),
                ("action_flag", models.SmallIntegerField()),
                ("change_message", models.TextField()),
            ],
            options={
                "db_table": "django_admin_log",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoContentType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("app_label", models.CharField(max_length=100)),
                ("model", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "django_content_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoMigrations",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("app", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("applied", models.DateTimeField()),
            ],
            options={
                "db_table": "django_migrations",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoSession",
            fields=[
                (
                    "session_key",
                    models.CharField(max_length=40, primary_key=True, serialize=False),
                ),
                ("session_data", models.TextField()),
                ("expire_date", models.DateTimeField()),
            ],
            options={
                "db_table": "django_session",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjGrupoUri",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "verbose_name": "(Django) Associação grupo Django/URI acessível",
                "verbose_name_plural": "(Django) Associações grupos Django/URIs acessíveis",
                "db_table": "dj_authgroup_uri",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjUri",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("uri", models.CharField(max_length=255, verbose_name="URI")),
                ("descricao", models.TextField(verbose_name="Descrição")),
            ],
            options={
                "verbose_name": "(Django) URI do frontend",
                "verbose_name_plural": "(Django) URIs do frontend",
                "db_table": "dj_uri",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EdCampo",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("descricao", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "(Editais) Rótulo do edital",
                "verbose_name_plural": "(Editais) Rótulos dos editais",
                "db_table": "ed_campo",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EdCota",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("cota", models.CharField(max_length=63)),
            ],
            options={
                "verbose_name": "(Editais) Tipo de cota",
                "verbose_name_plural": "(Editais) Tipos de cotas",
                "db_table": "ed_cota",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EdEdital",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("numero", models.SmallIntegerField(verbose_name="Número")),
                ("ano", models.SmallIntegerField()),
                (
                    "descricao",
                    models.TextField(blank=True, null=True, verbose_name="Descrição"),
                ),
                (
                    "data_inicio_inscricao",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="Data e hora de início das inscrições",
                    ),
                ),
                (
                    "data_fim_inscricao",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="Data e hora de fim das inscrições",
                    ),
                ),
                (
                    "data_inicio_validacao",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="Data e hora de início da validação",
                    ),
                ),
                (
                    "data_fim_validacao",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="Data e hora de fim da validação",
                    ),
                ),
                (
                    "data_validade",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data de validade do edital"
                    ),
                ),
                (
                    "data_cadastro",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                (
                    "multiplas_inscricoes",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="Permite múltiplas inscrições?",
                    ),
                ),
            ],
            options={
                "verbose_name": "(Editais) Edital",
                "verbose_name_plural": "(Editais) Editais",
                "db_table": "ed_edital",
                "managed": False,
                "ordering": ["-ano", "-numero"],
            },
        ),
        migrations.CreateModel(
            name="EdEditalPessoa",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "verbose_name": "(Editais) Associação de edital e pessoa",
                "verbose_name_plural": "(Editais) Associações de editais e pessoas",
                "db_table": "ed_edital_pessoa",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EdPessoaFormacao",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("inicio", models.DateField()),
                ("fim", models.DateField()),
            ],
            options={
                "verbose_name": "(Editais) Formação da pessoa",
                "verbose_name_plural": "(Editais) Formações das pessoas",
                "db_table": "ed_pessoa_formacao",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EdPessoaVagaCampoCheckbox",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "verbose_name": "(Editais) Marcação de checkbox pela pessoa",
                "verbose_name_plural": "(Editais) Marcações de checkboxes pelas pessoas",
                "db_table": "ed_pessoa_vaga_campo_checkbox",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EdPessoaVagaCampoCheckboxPontuacao",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("pontuacao", models.FloatField(verbose_name="Pontuação")),
            ],
            options={
                "verbose_name": "(Editais) Pontuação do candidato - checkbox",
                "verbose_name_plural": "(Editais) Pontuações dos candidatos - checkboxes",
                "db_table": "ed_pessoa_vaga_campo_checkbox_pontuacao",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EdPessoaVagaCampoCheckboxUpload",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("caminho_arquivo", models.CharField(max_length=511)),
                ("validado", models.BooleanField()),
            ],
            options={
                "verbose_name": "(Editais) Arquivo do candidato - checkbox",
                "verbose_name_plural": "(Editais) Arquivos dos candidatos - checkboxes",
                "db_table": "ed_pessoa_vaga_campo_checkbox_upload",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EdPessoaVagaCampoCombobox",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "verbose_name": "(Editais) Marcação de combobox pela pessoa",
                "verbose_name_plural": "(Editais) Marcações de comboboxes pelas pessoas",
                "db_table": "ed_pessoa_vaga_campo_combobox",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EdPessoaVagaCampoComboboxPontuacao",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("pontuacao", models.FloatField(verbose_name="Pontuação")),
            ],
            options={
                "verbose_name": "(Editais) Pontuação do candidato - combobox",
                "verbose_name_plural": "(Editais) Pontuações dos candidatos - comboboxes",
                "db_table": "ed_pessoa_vaga_campo_combobox_pontuacao",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EdPessoaVagaCampoComboboxUpload",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("caminho_arquivo", models.CharField(max_length=511)),
                ("validado", models.BooleanField()),
            ],
            options={
                "verbose_name": "(Editais) Arquivo do candidato - combobox",
                "verbose_name_plural": "(Editais) Arquivos dos candidatos - comboboxes",
                "db_table": "ed_pessoa_vaga_campo_combobox_upload",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EdPessoaVagaCampoDatebox",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("inicio", models.DateField()),
                ("fim", models.DateField()),
            ],
            options={
                "verbose_name": "(Editais) Marcação de datebox pela pessoa",
                "verbose_name_plural": "(Editais) Marcações de dateboxes pelas pessoas",
                "db_table": "ed_pessoa_vaga_campo_datebox",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EdPessoaVagaCampoDateboxPeriodo",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("inicio", models.DateField()),
                ("fim", models.DateField()),
            ],
            options={
                "verbose_name": "(Editais) Período (informado) do candidato - datebox",
                "verbose_name_plural": "(Editais) Períodos (informados) dos candidatos - dateboxes",
                "db_table": "ed_pessoa_vaga_campo_datebox_periodo",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EdPessoaVagaCampoDateboxPontuacao",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("pontuacao", models.FloatField(verbose_name="Pontuação")),
            ],
            options={
                "verbose_name": "(Editais) Pontuação do candidato - datebox",
                "verbose_name_plural": "(Editais) Pontuações dos candidatos - dateboxes",
                "db_table": "ed_pessoa_vaga_campo_datebox_pontuacao",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EdPessoaVagaCampoDateboxUpload",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("caminho_arquivo", models.CharField(max_length=511)),
                ("validado", models.BooleanField()),
            ],
            options={
                "verbose_name": "(Editais) Arquivo do candidato - datebox",
                "verbose_name_plural": "(Editais) Arquivos dos candidatos - dateboxes",
                "db_table": "ed_pessoa_vaga_campo_datebox_upload",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EdPessoaVagaConfirmacao",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "verbose_name": "(Editais) Pessoa confirmada",
                "verbose_name_plural": "(Editais) Pessoas confirmadas",
                "db_table": "ed_pessoa_vaga_confirmacao",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EdPessoaVagaCota",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "verbose_name": "(Editais) Associação entre pessoa, vaga e cota",
                "verbose_name_plural": "(Editais) Associações entre pessoas, vagas e cotas",
                "db_table": "ed_pessoa_vaga_cota",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EdPessoaVagaInscricao",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("pontuacao", models.SmallIntegerField(blank=True, null=True)),
                ("data", models.DateTimeField()),
            ],
            options={
                "verbose_name": "(Editais) Pessoa inscrita",
                "verbose_name_plural": "(Editais) Pessoas inscritas",
                "db_table": "ed_pessoa_vaga_inscricao",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EdPessoaVagaJustificativa",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("justificativa", models.TextField()),
            ],
            options={
                "verbose_name": "(Editais) Pessoa - justificativa",
                "verbose_name_plural": "(Editais) Pessoas - justificativas",
                "db_table": "ed_pessoa_vaga_justificativa",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EdPessoaVagaValidacao",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("data", models.DateTimeField()),
            ],
            options={
                "verbose_name": "(Editais) Pessoa validada",
                "verbose_name_plural": "(Editais) Pessoas validadas",
                "db_table": "ed_pessoa_vaga_validacao",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EdPessoaVagaValidacaoIndeferimento",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "verbose_name": "(Editais) Pessoa indeferida",
                "verbose_name_plural": "(Editais) Pessoas indeferidas",
                "db_table": "ed_pessoa_vaga_validacao_indeferimento",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EdUnidade",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "verbose_name": "(Editais) Unidade responsável pelo edital",
                "verbose_name_plural": "(Editais) Unidades responsáveis pelos editais",
                "db_table": "ed_unidade",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EdEditalUnidade",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "verbose_name": "(Editais) Associação edital/unidade responsável",
                "verbose_name_plural": "(Editais) Associações editais/unidades responsáveis",
                "db_table": "ed_edital_unidade",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EdVaga",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "descricao",
                    models.CharField(max_length=127, verbose_name="Descrição"),
                ),
                (
                    "quantidade",
                    models.SmallIntegerField(
                        blank=True, null=True, verbose_name="Quantidade de vagas"
                    ),
                ),
            ],
            options={
                "verbose_name": "(Editais) Vaga do edital",
                "verbose_name_plural": "(Editais) Vagas dos editais",
                "db_table": "ed_vaga",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EdVagaCampoCheckbox",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "pontuacao",
                    models.SmallIntegerField(
                        blank=True, null=True, verbose_name="Pontuação"
                    ),
                ),
                ("obrigatorio", models.BooleanField(verbose_name="Obrigatório")),
            ],
            options={
                "verbose_name": "(Editais) Checkbox da vaga",
                "verbose_name_plural": "(Editais) Checkboxes das vagas",
                "db_table": "ed_vaga_campo_checkbox",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EdVagaCampoCombobox",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("descricao", models.TextField(verbose_name="Descrição")),
                ("ordem", models.SmallIntegerField()),
                (
                    "pontuacao",
                    models.SmallIntegerField(
                        blank=True, null=True, verbose_name="Pontuação"
                    ),
                ),
                ("obrigatorio", models.BooleanField(verbose_name="Obrigatório")),
            ],
            options={
                "verbose_name": "(Editais) Combobox da vaga",
                "verbose_name_plural": "(Editais) Comboboxes das vagas",
                "db_table": "ed_vaga_campo_combobox",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EdVagaCampoDatebox",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "fracao_pontuacao",
                    models.FloatField(verbose_name="Fração de pontuação"),
                ),
                (
                    "multiplicador_fracao_pontuacao",
                    models.SmallIntegerField(
                        db_comment="Multiplicador em dias",
                        verbose_name="Multiplicador em dias p/ pontuação",
                    ),
                ),
                (
                    "pontuacao_maxima",
                    models.FloatField(verbose_name="Pontuação máxima"),
                ),
                ("obrigatorio", models.BooleanField(verbose_name="Obrigatório")),
            ],
            options={
                "verbose_name": "(Editais) Datebox da vaga",
                "verbose_name_plural": "(Editais) Dateboxes das vagas",
                "db_table": "ed_vaga_campo_datebox",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EdVagaCota",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "verbose_name": "(Editais) Associação entre vaga e cota",
                "verbose_name_plural": "(Editais) Associações entre vagas e cotas",
                "db_table": "ed_vaga_cota",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FiDatafrequencia",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("data_inicio", models.DateTimeField(blank=True, null=True)),
                ("data_fim", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "(Financeiro) Período de lançamento de frequência",
                "verbose_name_plural": "(Financeiro) Períodos de lançamento de frequências",
                "db_table": "fi_datafrequencia",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FiEditalFuncaoOferta",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "verbose_name": "(Financeiro) Associação entre edital, função da ficha e oferta do curso",
                "verbose_name_plural": "(Financeiro) Associações entre editais, funções das fichas e ofertas dos cursos",
                "db_table": "fi_edital_funcao_oferta",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FiFrequencia",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("data", models.DateTimeField(verbose_name="Data do lançamento")),
            ],
            options={
                "verbose_name": "(Financeiro) Frequência",
                "verbose_name_plural": "(Financeiro) Frequências",
                "db_table": "fi_frequencia",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FiFrequenciaDisciplina",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "verbose_name": "(Financeiro) Frequência - disciplina lançada para o bolsista",
                "verbose_name_plural": "(Financeiro) Frequências - disciplinas lançadas para os bolsistas",
                "db_table": "fi_frequencia_disciplina",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FiFrequenciaMoodle",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("moodle_id", models.CharField(max_length=11)),
                ("ultimo_acesso", models.DateTimeField(blank=True, null=True)),
                ("data_consulta", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "(Financeiro) Frequência - acesso do bolsista ao Moodle",
                "verbose_name_plural": "(Financeiro) Frequências - acessos dos bolsistas ao Moodle",
                "db_table": "fi_frequencia_moodle",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FiFuncaoBolsista",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "funcao",
                    models.CharField(max_length=31, verbose_name="Função do bolsista"),
                ),
                (
                    "ficha_uab",
                    models.BooleanField(verbose_name="Pode gerar ficha UAB?"),
                ),
            ],
            options={
                "verbose_name": "(Financeiro) Função do bolsista",
                "verbose_name_plural": "(Financeiro) Funções dos bolsistas",
                "db_table": "fi_funcao_bolsista",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FiFuncaoBolsistaDeclaracao",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "item_declaracao",
                    models.TextField(
                        blank=True, null=True, verbose_name="Item da descrição"
                    ),
                ),
            ],
            options={
                "verbose_name": "(Financeiro) Item da declaração da ficha",
                "verbose_name_plural": "(Financeiro) Itens da declaração da ficha",
                "db_table": "fi_funcao_bolsista_declaracao",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FiPessoaFicha",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "data_nascimento",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data de nascimento"
                    ),
                ),
                (
                    "sexo",
                    models.CharField(
                        blank=True, max_length=1, null=True, verbose_name="Sexo"
                    ),
                ),
                (
                    "profissao",
                    models.CharField(
                        blank=True, max_length=127, null=True, verbose_name="Profissão"
                    ),
                ),
                (
                    "tipo_documento",
                    models.CharField(
                        blank=True,
                        max_length=3,
                        null=True,
                        verbose_name="Tipo de documento",
                    ),
                ),
                (
                    "numero_documento",
                    models.CharField(
                        blank=True,
                        max_length=31,
                        null=True,
                        verbose_name="Número do documento",
                    ),
                ),
                (
                    "orgao_expedidor",
                    models.CharField(
                        blank=True,
                        max_length=31,
                        null=True,
                        verbose_name="Órgão expedidor",
                    ),
                ),
                (
                    "data_emissao",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data de emissão"
                    ),
                ),
                (
                    "estado_civil",
                    models.CharField(
                        blank=True,
                        max_length=15,
                        null=True,
                        verbose_name="Estado civil",
                    ),
                ),
                (
                    "nome_conjuge",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Nome do cônjuge",
                    ),
                ),
                (
                    "nome_pai",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Nome do pai",
                    ),
                ),
                (
                    "nome_mae",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Nome da mãe",
                    ),
                ),
                (
                    "area_ultimo_curso_superior",
                    models.CharField(
                        blank=True,
                        max_length=10,
                        null=True,
                        verbose_name="Área do último curso superior",
                    ),
                ),
                (
                    "ultimo_curso_titulacao",
                    models.CharField(
                        blank=True,
                        max_length=127,
                        null=True,
                        verbose_name="Titulação do último curso",
                    ),
                ),
                (
                    "instituicao_titulacao",
                    models.CharField(
                        blank=True,
                        max_length=127,
                        null=True,
                        verbose_name="Instituição da titulação",
                    ),
                ),
                (
                    "data_inicio_vinculacao",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Data de início da vinculação",
                    ),
                ),
                (
                    "data_fim_vinculacao",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data de fim da vinculação"
                    ),
                ),
            ],
            options={
                "verbose_name": "(Financeiro) Ficha",
                "verbose_name_plural": "(Financeiro) Fichas",
                "db_table": "fi_pessoa_ficha",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrDisponibilidadeEquipe",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "dia_semana",
                    models.CharField(
                        choices=[
                            ("1", "Segunda-feira"),
                            ("2", "Terça-feira"),
                            ("3", "Quarta-feira"),
                            ("4", "Quinta-feira"),
                            ("5", "Sexta-feira"),
                            ("6", "Sábado"),
                            ("7", "Domingo"),
                        ],
                        db_comment="isodow() do pgsql",
                        max_length=1,
                        verbose_name="Dia da semana",
                    ),
                ),
                ("inicio", models.TimeField(verbose_name="Início")),
                ("fim", models.TimeField(verbose_name="Fim")),
            ],
            options={
                "verbose_name": "(Transmissão) Dia e horário disponível da equipe",
                "verbose_name_plural": "(Transmissão) Dias e horários disponíveis da equipe",
                "db_table": "tr_disponibilidade_equipe",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrIndisponibilidadeEquipe",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "data",
                    models.DateField(unique=True, verbose_name="Data indisponível"),
                ),
            ],
            options={
                "verbose_name": "(Transmissão) Dia indisponível da equipe",
                "verbose_name_plural": "(Transmissão) Dias indisponíveis da equipe",
                "db_table": "tr_indisponibilidade_equipe",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrEspacoFisico",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "espaco_fisico",
                    models.CharField(max_length=63, verbose_name="Espaço físico"),
                ),
                (
                    "dias_pre_transmissao",
                    models.SmallIntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Intervalo (dias) anterior (logística)",
                    ),
                ),
                (
                    "dias_pos_transmissao",
                    models.SmallIntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Intervalo (dias) posterior (logística)",
                    ),
                ),
                (
                    "observacao",
                    models.TextField(blank=True, null=True, verbose_name="Observação"),
                ),
                ("ativo", models.BooleanField(verbose_name="Ativo?")),
            ],
            options={
                "verbose_name": "(Transmissão) Características do espaço físico para transmissão",
                "verbose_name_plural": "(Transmissão) Características do espaço físico para transmissões",
                "db_table": "tr_espaco_fisico",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrLimites",
            fields=[
                ("id", models.SmallIntegerField(primary_key=True, serialize=False)),
                (
                    "maximo_por_mes",
                    models.SmallIntegerField(
                        verbose_name="Máximo de transmissões por mês"
                    ),
                ),
                (
                    "maximo_por_semana",
                    models.SmallIntegerField(
                        verbose_name="Máximo de transmissões por semana"
                    ),
                ),
                (
                    "maximo_dias_na_semana",
                    models.SmallIntegerField(
                        verbose_name="Máximo de dias de transmissão por semana"
                    ),
                ),
                (
                    "limite_por_pessoa",
                    models.SmallIntegerField(
                        verbose_name="Limite de pedidos ativos por pessoa"
                    ),
                ),
                (
                    "dias_de_antecedencia",
                    models.SmallIntegerField(
                        verbose_name="Dias a partir de hoje de antecedência para agendamento"
                    ),
                ),
                (
                    "dias_de_agenda_aberta",
                    models.SmallIntegerField(
                        verbose_name="Dias a partir de hoje abertos na agenda"
                    ),
                ),
                (
                    "evento_passando_de_semana",
                    models.BooleanField(
                        verbose_name="O mesmo evento pode se estender por mais de uma semana?"
                    ),
                ),
            ],
            options={
                "verbose_name": "(Transmissão) Limites de pedido de transmissão",
                "verbose_name_plural": "(Transmissão) Limites de pedidos de transmissões",
                "db_table": "tr_limites",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrTermo",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("termo", models.TextField()),
            ],
            options={
                "verbose_name": "(Transmissão) Termo de transmissão",
                "verbose_name_plural": "(Transmissão) Termos de transmissões",
                "db_table": "tr_termo",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrTransmissao",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("observacao", models.TextField(verbose_name="Observação")),
            ],
            options={
                "verbose_name": "(Transmissão) Pedido de transmissão",
                "verbose_name_plural": "(Transmissão) Pedidos de transmissões",
                "db_table": "tr_transmissao",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrTransmissaoEmail",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "email",
                    models.CharField(
                        max_length=254, unique=True, verbose_name="E-mail"
                    ),
                ),
                (
                    "tipo_email_envio",
                    models.CharField(
                        blank=True,
                        choices=[("cc", "Com cópia"), ("cco", "Com cópia oculta")],
                        max_length=3,
                        null=True,
                        verbose_name="Tipo de envio",
                    ),
                ),
            ],
            options={
                "verbose_name": "(Transmissão) E-mail para envio de alerta de pedido de transmissão",
                "verbose_name_plural": "(Transmissão) E-mails para envios de alertas de pedidos de transmissões",
                "db_table": "tr_transmissao_email",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrTransmissaoHorario",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("inicio", models.DateTimeField(verbose_name="Início")),
                ("fim", models.DateTimeField(verbose_name="Fim")),
            ],
            options={
                "verbose_name": "(Transmissão) Horário do pedido de transmissão",
                "verbose_name_plural": "(Transmissão) Horários dos pedidos de transmissões",
                "db_table": "tr_transmissao_horario",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrTransmissaoRecusada",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "observacao",
                    models.TextField(blank=True, null=True, verbose_name="Observação"),
                ),
            ],
            options={
                "verbose_name": "(Transmissão) Transmissão recusada",
                "verbose_name_plural": "(Transmissão) Transmissões recusadas",
                "db_table": "tr_transmissao_recusada",
                "managed": False,
            },
        ),
    ]
